networks:
  dev-local:
    driver: bridge
#version: '3.9'
services:
  postgres:
    image: ankane/pgvector
#    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - '${DATA_DIR}/postgresql:/var/lib/postgresql/data'
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=postgresql
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_pass
      - PGUSER=db_user
    healthcheck:
      #error: database system was shut down at 2024-06-16 21:36:47 UTC
      #CHANGE 1: this command checks if the database is ready, right on the source db server
      test: [ "CMD-SHELL", "pg_isready -d postgresql -U db_user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dev-local

  mariadb:
    image: yobasystems/alpine-mariadb
    restart: unless-stopped
    ports:
      - 3306:3306
# volumes cause login denied issue
#    volumes:
#      - '${DATA_DIR}/mariadb:/var/lib/mysql'
    environment:
      MYSQL_DATABASE: mariadb
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_pass
    networks:
      - dev-local

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - '${DATA_DIR}/redis:/data'
    networks:
      - dev-local

  nextcloud:
    image: nextcloud
    restart: always
    ports:
      - 8080:80
      - 8089:443
    volumes:
      - '${DATA_DIR}/nextcloud:/var/www/html'
#      - ./config.php:/var/www/html/config/config.php
    environment:
      - PUID=1000
      - PGID=1000
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - dev-local
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - '${DATA_DIR}/mongo:/data/db'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=mongo
    networks:
      - dev-local
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 10081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin@mongo:27017/
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH=false
    networks:
      - dev-local

#default login as administrator:
#Email:    admin@example.com
#Password: changeme
  nginx-proxy-manage:
    container_name: nginx-proxy-manager
    image: jc21/nginx-proxy-manager:latest
    ports:
      - '80:80'
      - '8180:80'
      - '8181:81'
      - '8189:443'
    volumes:
      - "${DATA_DIR}/ngx-proxy-mgr/data:/data"
      - "${DATA_DIR}/ngx-proxy-mgr/letsencrypt:/etc/letsencrypt"
    restart: unless-stopped
    networks:
      - dev-local

# set hosts in /etc/hosts to access those hosts through nginx-proxy-manager
## pi servers
#192.168.100.201 pi2.dev.local pi2.local pi2
#192.168.100.203 pi-nas.local pi-nas
#
#192.168.100.205 pi5.dev.local pi5.local pi5
## hosts forwar (nginx proxy on pi5) 
#192.168.100.205 proxy.dev.local
#192.168.100.205 postgresql.dev.local
#192.168.100.205 mariadb.dev.local
#192.168.100.205 redis.dev.local
#192.168.100.205 nextcloud.dev.local
#192.168.100.205 mongo.dev.local
#192.168.100.205 mongo-express.dev.local
#
## pi-ai
#192.168.100.207 ai.dev.local ai.local ai
#192.168.100.207 pi-ai.dev.local pi-ai.local pi-ai