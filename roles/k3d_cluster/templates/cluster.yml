apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: {{ cluster_name }} # cluster name - will still be prefixed with `k3d-`
servers: {{ cluster_servers }} # same as `--servers 3`
agents: {{ cluster_agents }} # same as `--agents 5`
image: {{ k3d_image }} #rancher/k3s:v1.30.1-k3s1-arm64
kubeAPI: # same as `--api-port HOSTNAME:6445` (where the name would resolve to 127.0.0.1)
  host: "{{ cluster_host }}" # important for the `server` setting in the kubeconfig, for local: /etc/hosts
  hostIP: "0.0.0.0" # where the Kubernetes API will be listening on
  hostPort: "6445" # where the Kubernetes API listening port will be mapped to on your host system
ports:
  # k3d cluster create -p "80:80@loadbalancer" -p "443:443@loadbalancer"
  # after cluster is created, use `k3d cluster edit {{ cluster_name }} --port-add 8081:81@loadbalancer`
  - port: 80:80
    nodeFilters:
      - loadbalancer
  - port: 443:443
    nodeFilters:
      - loadbalancer
  - port: 8080:8080 # for nextcloud
    nodeFilters:
      - loadbalancer
  - port: 8089:8089 # for nextcloud
    nodeFilters:
      - loadbalancer
  - port: 3306:3306 # for MySQL/MariaDB
    nodeFilters:
      - loadbalancer
  - port: 5432:5432 # for PostgreSQL
    nodeFilters:
      - loadbalancer
  - port: 6379:6379 # for Redis
    nodeFilters:
      - loadbalancer
  - port: 27017:27017 # for MongoDB 
    nodeFilters:
      - loadbalancer
  - port: 30000-30100:30000-30100
    nodeFilters:
      - server:*
env:
  - envVar: foo=bar # for testing, same as `--env 'foo=bar@server:0'`
    nodeFilters:
      - server:0
volumes: # repeatable flags are represented as YAML lists
  # attache SSD to to all agents
  # same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
  - volume: {{ host_path_ssd }}:/ssd
    nodeFilters:
      - agent:*
registries:
  create:
    name: "docker-registry-{{ cluster_host }}"
    host: 0.0.0.0
    hostPort: "5000"
    volumes:
      - /var/lib/registry:/var/lib/registry # persist registry data locally
options:
  k3s: # options passed on to K3s itself
    # add disk label to node
    # k3s kubectl label nodes <node-name> foo=baz --overwrite
    nodeLabels:
      - label: disk=ssd
        nodeFilters:
          - agent:*
      - label: env=dev # same as `--k3s-node-label 'env=dev@agent:1'` -> this results in a kubernetes node label
        nodeFilters:
          - agent:0
    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`
      - arg: "--tls-san={{ public_ip }}" # add public IP for remote access
        nodeFilters:
          - server:*
      #k3s comes by default with traefik ingress setup and configured to be on port 80 (and maybe 433 also)
      #- arg: --disable=traefik
      #  nodeFilters:
      #  - server:*
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true # also set current-context to the new cluster's context; same as `--kubeconfig-switch-context` (default: true)
  runtime: # runtime (docker) specific options
    labels:
      - label: bar=baz # for testing, same as `--runtime-label 'bar=baz@agent:1'` -> this results in a runtime (docker) container label
        nodeFilters:
          - agent:1
