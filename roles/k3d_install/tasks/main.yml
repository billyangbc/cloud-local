---
# install kubectl if not existing
- name: Check if kubectl is installed
  stat:
    path: "{{ kubectl_bin }}"
  register: kubectl
- name: Get kubectl version
  command: curl -L -s https://dl.k8s.io/release/stable.txt
  register: kubectl_version
  when: kubectl.stat.exists == False
- name: Print the kubectl version
  debug:
    var: kubectl_version.stdout
  when: kubectl.stat.exists == False
- name: Download the latest kubectl release
  uri:
    url: "https://dl.k8s.io/release/{{ kubectl_version.stdout }}/bin/linux/arm64/kubectl"
    dest: "{{ kubectl_bin }}"
    mode: '0755'
  when: kubectl.stat.exists == False

# install k3d if not existing
- name: Check if k3d is installed
  stat:
    path: "{{ k3d_bin }}"
  register: k3d
- name: Install k3d if not existing
  get_url: 
    url: https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh
    dest: /tmp/k3d-installer.sh
    mode: '0755'
  when: k3d.stat.exists == False
- name: Install k3d
  shell: /tmp/k3d-installer.sh
  when: k3d.stat.exists == False
- name: Remove the k3d-installer.sh
  file: 
    path: /tmp/k3d-installer.sh 
    state: absent

# install helm if not existing
- name: Install curl (if not already installed)
  package:
    name: curl
    state: present

- name: Download Helm installation script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: '0755'

- name: Run Helm installation script
  command: /tmp/get_helm.sh
  args:
    creates: /usr/local/bin/helm
  register: helm_install_result
  changed_when: false

#- name: Add /usr/local/bin to PATH
#  lineinfile:
#    path: ~/.bashrc
#    line: 'export PATH=$PATH:/usr/local/bin'
#  when: helm_install_result.rc == 0