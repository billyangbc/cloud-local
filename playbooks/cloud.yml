- name: Cloud local bootstrap
  hosts: cluster
  gather_facts: true
  roles:
    - {role: bootstrap, become: True}
    - {role: k3d_install, become: True}

- name: Create k3d Cluster
  hosts: cluster
  roles:
    - role: k3d_cluster
      become: False

# create infra in k8s cluster
- name: Create infra namespace in k8s cluster
  hosts: pi5
  roles:
    - role: k8s_deploy
      become: False
      vars:
        k8s_files:
          - ns.yaml
          - postgres.yaml
          - redis.yaml
          - mariadb.yaml
          - mongo.yaml
          - mongo-express.yaml
          - nextcloud.yaml
          - ingress.yaml
        k8s_namespace: infra
        k8s_dir: k8s_infra
        nextcloud_ip: 192.168.100.205
        nextcloud_host: nextcloud.local

# create monitor in k8s cluster
- name: Create monitor in k8s cluster
  hosts: pi5
  roles:
    - role: k8s_deploy
      become: False
      vars:
        k8s_files:
          - ns.yaml
          - grafana.yaml
          - prometheus.yaml
          - ingress.yaml
        k8s_namespace: monitor
        k8s_dir: k8s_monitor

## setup longhorn storage in k8s cluster
#- name: longhorn storage
#  hosts: pi_ai
#  roles:
#    - role: k8s_deploy
#      become: False
#      vars:
#        k8s_namespace: longhorn-system
#        k8s_dir: k8s_longhorn
#        k8s_files:
#          - ns.yaml
#          - service.yaml
#          - ingress.yaml

# create longhorn in k8s cluster
# https://medium.com/@stevenhoang/step-by-step-guide-hosting-longhorn-on-k3s-arm-2328283d7244
# kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.7.1/deploy/prerequisite/longhorn-iscsi-installation.yaml
# kubectl delete -f https://raw.githubusercontent.com/longhorn/longhorn/v1.7.1/deploy/prerequisite/longhorn-iscsi-installation.yaml
# 
# kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.7.1/deploy/prerequisite/longhorn-nfs-installation.yaml
# kubectl delete -f https://raw.githubusercontent.com/longhorn/longhorn/v1.7.1/deploy/prerequisite/longhorn-nfs-installation.yaml

#
#  tasks:
#    # install required open-iscsi apt packages
#    - name: Install required packages
#      become: True
#      apt:
#        pkg:
#          - open-iscsi
#        state: latest
#        update_cache: true
#    # add bitnami helm repo
#    #- name: Add helm repo
#    #  kubernetes.core.helm_repository:
#    #      name: "bitnami"
#    #      repo_url: "https://charts.bitnami.com/bitnami"
#    # add longhorn helm repo
#    - name: Add longhorn helm repo
#      become: False
#      vars:
#        helm_chart_url: https://charts.longhorn.io
#        helm_repo_name: longhorn
#        chart_name: longhorn
#        chart_ref: longhorn/longhorn
#      kubernetes.core.helm_repository:
#          name: "{{ helm_repo_name }}"
#          repo_url: "{{ helm_chart_url }}"
#    # install helm chart
#    - name: Install helm chart
#      become: False
#      vars:
#        k8s_namespace: longhorn-system
#        chart_name: longhorn
#        chart_ref: longhorn/longhorn
#      kubernetes.core.helm:
#        namespace: "{{ k8s_namespace }}"
#        name: "{{ chart_name }}"
#        chart_ref: "{{ chart_ref }}"

# create storage service in pi_nas
- name: Create Storage 
  hosts: pi_nas
  roles:
    - {role: storage, become: False}

# use:
#ansible-playbook -i inventory playbooks/cloud.yml --ask-pass --ask-become-pass
# or:
#ansible-playbook -i inventory playbooks/cloud.yml